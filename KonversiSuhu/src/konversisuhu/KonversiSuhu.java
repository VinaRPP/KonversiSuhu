/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package konversisuhu;

import java.awt.event.ItemEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author ACER
 */
public class KonversiSuhu extends javax.swing.JFrame {

    /**
     * Creates new form KonversiSuhu
     */
    public KonversiSuhu() {
        initComponents();
        tf1.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyTyped(java.awt.event.KeyEvent evt) {
                validasiAngka(evt);
            }
        });
        tf2.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyTyped(java.awt.event.KeyEvent evt) {
                validasiAngka(evt);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tf1 = new javax.swing.JTextField();
        cb1 = new javax.swing.JComboBox<>();
        cb2 = new javax.swing.JComboBox<>();
        tf2 = new javax.swing.JTextField();
        rb1 = new javax.swing.JRadioButton();
        b1 = new javax.swing.JButton();
        b2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(142, 221, 142));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("KONVERSI SUHU");

        tf1.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        tf1.setText("0");
        tf1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf1FocusGained(evt);
            }
        });
        tf1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tf1KeyReleased(evt);
            }
        });

        cb1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        cb1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CELCIUS", "FAHRENHEIT", "KELVIN", "REAMUR" }));
        cb1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb1ItemStateChanged(evt);
            }
        });

        cb2.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        cb2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CELCIUS", "FAHRENHEIT", "KELVIN", "REAMUR" }));
        cb2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cb2ItemStateChanged(evt);
            }
        });

        tf2.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        tf2.setText("0");
        tf2.setEnabled(false);
        tf2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tf2FocusGained(evt);
            }
        });
        tf2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tf2KeyReleased(evt);
            }
        });

        rb1.setText("â‡…");
        rb1.setAlignmentX(1.0F);
        rb1.setAlignmentY(1.0F);
        rb1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        rb1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rb1ItemStateChanged(evt);
            }
        });

        b1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        b1.setText("Konversi");

        b2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        b2.setText("Bersihkan");
        b2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(tf1, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(rb1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tf2, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(cb1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cb2, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(244, 244, 244))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(292, 292, 292))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rb1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cb2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(b1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(b2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b2ActionPerformed
        tf1.setText("0");
        tf2.setText("0");
        if (!rb1.isSelected()) {
            tf1.requestFocus();
        }else{
            tf2.requestFocus();
        }

    }//GEN-LAST:event_b2ActionPerformed

    private void tf1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf1KeyReleased
        if (!rb1.isSelected()) {
            updateHasilKonversi();
        }

    }//GEN-LAST:event_tf1KeyReleased

    private void cb1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb1ItemStateChanged
            updateHasilKonversi();
    }//GEN-LAST:event_cb1ItemStateChanged

    private void cb2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cb2ItemStateChanged
            updateHasilKonversi();
    }//GEN-LAST:event_cb2ItemStateChanged

    private void rb1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rb1ItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
        tf1.setEnabled(false); // Disable suhuA, enable suhuB
        tf2.setEnabled(true);
    } else {
        tf1.setEnabled(true);  // Enable suhuA, disable suhuB
        tf2.setEnabled(false);
    }
    updateHasilKonversi(); // Update hasil saat status invert berubah
    }//GEN-LAST:event_rb1ItemStateChanged

    private void tf2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tf2KeyReleased
        if (rb1.isSelected()) {
            updateHasilKonversi();
        }
    }//GEN-LAST:event_tf2KeyReleased

    private void tf1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf1FocusGained
        tf1.setText("");
    }//GEN-LAST:event_tf1FocusGained

    private void tf2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tf2FocusGained
        tf2.setText("");
    }//GEN-LAST:event_tf2FocusGained

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KonversiSuhu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KonversiSuhu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KonversiSuhu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KonversiSuhu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KonversiSuhu().setVisible(true);
            }
        });
        
    }
    
    private void updateHasilKonversi() {
    try {
        double suhuAwal;
        String namasuhuAwal, namasuhuTujuan;

        // Tentukan sumber input berdasarkan invertOpt
        if (rb1.isSelected()) {
            if (tf2.getText().isEmpty()) {
                throw new NumberFormatException();
            }
            suhuAwal = Double.parseDouble(tf2.getText());
            namasuhuAwal = (String) cb2.getSelectedItem();
            namasuhuTujuan = (String) cb1.getSelectedItem();
        } else {
            if (tf1.getText().isEmpty()) {
                throw new NumberFormatException();
            }
            suhuAwal = Double.parseDouble(tf1.getText());
            namasuhuAwal = (String) cb1.getSelectedItem();
            namasuhuTujuan = (String) cb2.getSelectedItem();
        }

        SatuanSuhu satuanAwal = SatuanSuhu.valueOf(namasuhuAwal.toUpperCase());
        SatuanSuhu satuanTujuan = SatuanSuhu.valueOf(namasuhuTujuan.toUpperCase());

        Double hasil = convertSuhu(suhuAwal, satuanAwal, satuanTujuan);

        // Set hasil konversi pada output yang sesuai
        if (rb1.isSelected()) {
            tf1.setText(hasil.toString());
        } else {
            tf2.setText(hasil.toString());
        }
    } catch (NumberFormatException ex) {
        if (rb1.isSelected()) {
            tf1.setText("Inputan Salah");
        } else {
            tf2.setText("Inputan Salah");
        }
    }
}

private void validasiAngka(KeyEvent evt) {
    char c = evt.getKeyChar();
    JTextField source = (JTextField) evt.getSource();
    String text = source.getText();

    // Perbolehkan hanya angka, backspace, dan tanda minus di posisi pertama
    if (!Character.isDigit(c) && c != '\b' && (c != '-' || !text.isEmpty())) {
        evt.consume(); // Batalkan input
        if (c != '-') {
            JOptionPane.showMessageDialog(this, "Hanya angka yang diperbolehkan!", "Error Input", JOptionPane.ERROR_MESSAGE);
        }
    }
}
        
    public enum SatuanSuhu {
        CELCIUS, FAHRENHEIT, KELVIN, REAMUR
    }

    private double convertSuhu(double suhuAwal, SatuanSuhu satuanAwal, SatuanSuhu satuanTujuan) {
        switch (satuanAwal) {
            case CELCIUS:
                switch (satuanTujuan) {
                    case FAHRENHEIT:
                        return (suhuAwal * 9.0 / 5) + 32;
                    case KELVIN:
                        return suhuAwal + 273.15;
                    case REAMUR:
                        return suhuAwal * 4.0 / 5;
                    default:
                        return suhuAwal;
                }
            case FAHRENHEIT:
                switch (satuanTujuan) {
                    case CELCIUS:
                        return (suhuAwal - 32) * 5.0 / 9;
                    case KELVIN:
                        return (suhuAwal + 459.67) * 5.0 / 9;
                    case REAMUR:
                        return (suhuAwal - 32) * 4.0 / 9;
                    default:
                        return suhuAwal;
                }
            case KELVIN:
                switch (satuanTujuan) {
                    case CELCIUS:
                        return suhuAwal - 273.15;
                    case FAHRENHEIT:
                        return (suhuAwal * 9.0 / 5) - 459.67;
                    case REAMUR:
                        return (suhuAwal - 273.15) * 4.0 / 5;
                    default:
                        return suhuAwal;
                }
            case REAMUR:
                switch (satuanTujuan) {
                    case CELCIUS:
                        return suhuAwal * 5.0 / 4;
                    case FAHRENHEIT:
                        return (suhuAwal * 9.0 / 4) + 32;
                    case KELVIN:
                        return (suhuAwal * 5.0 / 4) + 273.15;
                    default:
                        return suhuAwal;
                }
            default:
                throw new IllegalArgumentException("Satuan awal tidak valid");
        }
    }

    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b1;
    private javax.swing.JButton b2;
    private javax.swing.JComboBox<String> cb1;
    private javax.swing.JComboBox<String> cb2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton rb1;
    private javax.swing.JTextField tf1;
    private javax.swing.JTextField tf2;
    // End of variables declaration//GEN-END:variables
}
